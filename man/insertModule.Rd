% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils_insertModule.R
\name{insertModule}
\alias{insertModule}
\title{Insert module}
\usage{
insertModule(
  id,
  selector,
  moduleUI,
  moduleUI.args = list(),
  module,
  module.args = list(),
  ui.class = NULL,
 
    ui.style = "border: 1px solid lightgrey; border-radius: 10px; padding: 3px;\\n\\tmargin: 3px;"
)
}
\arguments{
\item{id}{The id to use for the modules. If you call \code{insertModule} from another
module, make sure \code{id} is namespaced.}

\item{selector}{A JS selector targetting the element after which the UI shall
be inserted (see \code{shiny::insertUI}).}

\item{moduleUI, moduleUI.args}{The module UI definition and its arguments OTHER
THAN \code{inputID}. Prepare them to be input in a \code{do.call} call.}

\item{module, module.args}{The module server definition and its arguments OTHER
THAN \code{inputID}. Prepare them to be input in a \code{do.call} call.}

\item{ui.class, ui.style}{CSS class and style to be applied to the module UI
container.}
}
\description{
Use this function to insert a module and its associated server somewhere in
your UI. It is inserted with a way to remove it (contained in a div). This
function only manages the graphical part. Server modules are still functional
and related data can still exist.
}
